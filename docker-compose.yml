version: '3.8'

services:
  eureka-server:
    build:
      context: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - EUREKA_SERVER_ENABLE_SELF_PRESERVATION=false
    networks:
      - microservice-network

  config-server:
    build:
      context: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS=file:///config-repo
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
    volumes:
      - ./config-repo:/config-repo
    depends_on:
      - eureka-server
    networks:
      - microservice-network

  voter-service:
    build:
      context: ./voter
    container_name: voter-service
    ports:
      - "8090:8090"
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://voter-db:5432/voter
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123
    depends_on:
      - eureka-server
      - config-server
      - voter-db
    networks:
      - microservice-network

  voter-db:
    image: postgres:13
    container_name: voter-db
    environment:
      - POSTGRES_DB=voter
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
    ports:
      - "5433:5432"
    networks:
      - microservice-network
    volumes:
      - voter-db-data:/var/lib/postgresql/data

networks:
  microservice-network:
    driver: bridge

volumes:
  voter-db-data:
